setwd('/app')

# retrieve input parameters

library(optparse)
library(jsonlite)
{% for dep in deps%}
{{ dep }}
{% endfor %}


option_list = list(

{% for in_var in cell.all_inputs|sort %}
{% if types[in_var] == list or types[in_var] == 'list' %}
{% set type = 'character' %}
{% elif types[in_var] == str or types[in_var] == 'str' %}
{% set type = 'character' %}
{% elif types[in_var] == int or types[in_var] == 'int' %}
{% set type = 'integer' %}
{% elif types[in_var] == float or types[in_var] == 'float' %}
{% set type = 'numeric' %}
{% elif types[in_var] == bool or types[in_var] == 'bool' %}
{% set type = 'logical' %}
{% else %}
{% set type = 'character' %}
{% endif %}
{% set option = 'make_option(c("--' +  in_var+'"), action="store", default=NA, type="'+type+'", help="my description")'   %}
{% if not loop.last %}
{% set option = option + ', '%}
{% endif %}
{{ option }}
{% endfor %}

)

# set input parameters accordingly
opt = parse_args(OptionParser(option_list=option_list))

var_serialization <- function(in_var){
    tryCatch(
        {
            in_var <<- fromJSON(in_var)
            return(in_var)
        },
        error=function(e) {
            {{ in_var }} <<- gsub("'", '"', in_var)
            {{ in_var }} <<- fromJSON(in_var)
            return(in_var)
        },
        warning=function(w) {
            {{ in_var }} <<- gsub("'", '"', in_var)
            {{ in_var }} <<- fromJSON(in_var)
            return(in_var)
        }
    )
}


{% for in_var in cell.all_inputs|sort %}
{% if types[in_var] == list  or types[in_var] == 'list' %}
{{ in_var }} <- NULL
print('Serialization of {{ in_var }}')

{{ in_var }} = var_serialization(opt${{ in_var }})

{% elif types[in_var] == str or types[in_var] == 'str' %}
{% elif types[in_var] == str or  types[in_var] == 'str' %}
print('Running : {{ in_var }} <- opt${{ in_var }}')
{{ in_var }} <- gsub('"', '', opt${{ in_var }})
{% else %}
{{ in_var }} = opt${{ in_var }}
{% endif %}
{% endfor %}

{% for c in confs %}
{{ c }}
{% endfor %}

print('-----------Running cell----------------')
{{ cell.original_source }}
print('-----------Cell executed----------------')

{% if cell.outputs|length > 0 %}
# capturing outputs
{% for out in cell.outputs %}
print('Serialization of {{ out }}')
file <- file(paste0('/tmp/{{out}}_', id, '.json'))
writeLines(toJSON({{out}}, auto_unbox=TRUE), file)
close(file)
{% endfor %}
{% endif %}