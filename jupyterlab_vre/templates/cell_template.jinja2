{% if deps|length >0 %}
{% for d in deps %}
{{ d }}
{% endfor %}
{% endif %}
{% if cell.inputs|length > 0 or cell.params|length > 0%}
import argparse
import json
import tempfile
import os

arg_parser = argparse.ArgumentParser()

{% for in_var in cell.inputs|sort %}
arg_parser.add_argument('--{{ in_var }}', action='store' {% if types[in_var] != 'list' %}, type={{ types[in_var] }} {% endif %}, required='True', dest='{{ in_var }}')
{% endfor %}

{% for param in cell.params|sort %}
arg_parser.add_argument('--{{ param }}', action='store', type={{ types[param] }}, required='True', dest='{{ param }}')
{% endfor %}

args = arg_parser.parse_args()
{% for in_var in cell.inputs|sort %}
{{ in_var }} = args.{{ in_var }}
{% endfor %}

{% for param in cell.params|sort %}
{{ param }} = args.{{ param }}
{% endfor %}
{% endif %}

{% for c in confs %}
{{ c }}
{% endfor %}

{{ cell.original_source }}





{% if cell.outputs|length > 0 %}
import json
outputs = {}
{% for out_var in cell.outputs|sort %}
outputs['{{ out_var }}'] = {{ out_var }}
{% endfor %}

output_path = os.path.join(tempfile.gettempdir(), 'outputs.json')

with open(output_path, 'w', encoding='utf-8') as f:
    json.dump(outputs, f, ensure_ascii=False, indent=4)
{% endif %}