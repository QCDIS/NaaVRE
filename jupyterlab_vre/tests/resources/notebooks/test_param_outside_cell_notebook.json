{
  "save": false,
  "kernel": "ipython",
  "cell_index": 6,
  "notebook": {
    "metadata": {
      "kernelspec": {
        "display_name": "Python 3 (ipykernel)",
        "language": "python",
        "name": "python3"
      },
      "language_info": {
        "codemirror_mode": {
          "name": "ipython",
          "version": 3
        },
        "file_extension": ".py",
        "mimetype": "text/x-python",
        "name": "python",
        "nbconvert_exporter": "python",
        "pygments_lexer": "ipython3",
        "version": "3.11.4"
      }
    },
    "nbformat_minor": 5,
    "nbformat": 4,
    "cells": [
      {
        "cell_type": "code",
        "source": "# a list\n\na_list = ['a','b','c','d']",
        "metadata": {
          "trusted": true
        },
        "execution_count": 2,
        "outputs": [],
        "id": "5f68e3d0-8fa2-4237-8fe3-29d1ec2cfbc1"
      },
      {
        "cell_type": "code",
        "source": "# process a list\n\nb_list = []\nfor elem in a_list:\n    b_list.append(elem+'42')\n",
        "metadata": {
          "trusted": true
        },
        "execution_count": 3,
        "outputs": [],
        "id": "e0621bdf-05ee-44b7-9519-c9b136b6ba62"
      },
      {
        "cell_type": "code",
        "source": "# concat\n\nres = ''\nfor elem in b_list:\n    res+=elem\n    \nprint(res)\n    ",
        "metadata": {
          "trusted": true
        },
        "execution_count": 4,
        "outputs": [
          {
            "name": "stdout",
            "output_type": "stream",
            "text": "a42b42c42d42\n"
          }
        ],
        "id": "97969827-90fa-41fc-b32e-a3f8d583e08e"
      },
      {
        "cell_type": "code",
        "source": "#verage\n\na = 2 \nnumbers  = [a, 4, 6, 8, 10]\n",
        "metadata": {
          "trusted": true,
          "tags": []
        },
        "execution_count": 1,
        "outputs": [
          {
            "name": "stdout",
            "output_type": "stream",
            "text": "6\n"
          }
        ],
        "id": "39790b85-3619-409d-af6c-a1096e36b751"
      },
      {
        "cell_type": "code",
        "source": "# bb\nimport statistics\n\nave = statistics.mean(numbers)\n\n",
        "metadata": {
          "trusted": true
        },
        "execution_count": null,
        "outputs": [],
        "id": "578545cc-8459-4092-a503-329928fc6ad1"
      },
      {
        "cell_type": "code",
        "source": "# params\n\nparam_density = 1",
        "metadata": {
          "trusted": true
        },
        "execution_count": null,
        "outputs": [],
        "id": "de7cc7cf-56c9-4538-92be-1a258e5ee812"
      },
      {
        "cell_type": "code",
        "source": "# Param check\n\n\n\n\nif param_density == 1: \n    param_CountingStrategy = 'density0'\n    \n# check if mandatory fields are present\ndiameterofsedimentationchamber = 'diameterofsedimentationchamber'",
        "metadata": {
          "trusted": true,
          "tags": []
        },
        "execution_count": 2,
        "outputs": [],
        "id": "9824a80c-b00b-441c-8152-7b2e671e081b"
      },
      {
        "cell_type": "code",
        "source": "# print \n\nprint(param_biovolume)\nparam_totalbiovolume\nparam_density\nparam_surfacearea\nparam_surfacevolumeratio\nparam_cellcarboncontent\nparam_totalcarboncontent\nparam_CountingStrategy\n\nprint(diameterofsedimentationchamber)\ndiameterofsedimentationchamber\ndiameteroffieldofview\ntransectcounting\nnumberofcountedfields\nnumberoftransects\nsettlingvolume\ndilutionfactor",
        "metadata": {
          "trusted": true,
          "tags": []
        },
        "execution_count": 3,
        "outputs": [
          {
            "name": "stdout",
            "output_type": "stream",
            "text": "1\ndiameterofsedimentationchamber\n"
          },
          {
            "execution_count": 3,
            "output_type": "execute_result",
            "data": {
              "text/plain": "'dilutionfactor'"
            },
            "metadata": {}
          }
        ],
        "id": "287f6cad-2029-4693-97da-5834db20c59e"
      },
      {
        "cell_type": "code",
        "source": "",
        "metadata": {
          "trusted": true
        },
        "execution_count": null,
        "outputs": [],
        "id": "c2b4ba69-640f-4708-8d4e-7f033721f20f"
      },
      {
        "cell_type": "code",
        "source": "",
        "metadata": {
          "trusted": true
        },
        "execution_count": null,
        "outputs": [],
        "id": "00dd23e8-531e-4dd8-90aa-43573c240a48"
      }
    ]
  }
}
