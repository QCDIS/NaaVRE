name: Python Package using Conda

on:
  workflow_call:
    secrets:
      jupyterhub_user:
        required: true
      vlab_slug:
        required: true
      cell_github:
        required: true
      cell_github_token:
        required: true
      api_endpoint:
        required: true
      module_mapping_url:
        required: true
      search_api_endpoint:
        required: true
      search_api_token:
        required: true
      registry_url:
        required: true
      naavre_api_token:
        required: true
      argo_url:
        required: true
      argo_api_token:
        required: true

env:
  CELL_GITHUB: ${{ secrets.cell_github }}
  CELL_GITHUB_TOKEN: ${{ secrets.cell_github_token }}
  REGISTRY_URL: ${{ secrets.registry_url }}
  NAAVRE_API_TOKEN: ${{ secrets.naavre_api_token }}
  JUPYTERHUB_USER: ${{ secrets.jupyterhub_user }}
  API_ENDPOINT: ${{ secrets.api_endpoint }}
  VLAB_SLUG: ${{ secrets.vlab_slug }}
  MODULE_MAPPING_URL: ${{ secrets.module_mapping_url }}
  SEARCH_API_ENDPOINT: ${{ secrets.search_api_endpoint }}
  SEARCH_API_TOKEN: ${{ secrets.search_api_token }}
  ARGO_URL: ${{ secrets.ARGO_URL }}
  ARGO_API_TOKEN: ${{ secrets.ARGO_API_TOKEN }}


jobs:
  build-linux:
    runs-on: ubuntu-latest
    steps:
      - name: Check secrets
        run: |
          if [ -z "$CELL_GITHUB" ]; then
            echo "CELL_GITHUB not set"
            exit 1
          fi
          if [ -z "$CELL_GITHUB_TOKEN" ]; then
            echo "CELL_GITHUB_TOKEN not set"
            exit 1
          fi
          if [ -z "$REGISTRY_URL" ]; then
            echo "REGISTRY_URL not set"
            exit 1
          fi
          if [ -z "$NAAVRE_API_TOKEN" ]; then
            echo "NAAVRE_API_TOKEN not set"
            exit 1
          fi
          if [ -z "$JUPYTERHUB_USER" ]; then
            echo "JUPYTERHUB_USER not set"
            exit 1
          fi
          if [ -z "$API_ENDPOINT" ]; then
            echo "API_ENDPOINT not set"
            exit 1
          fi
          if [ -z "$VLAB_SLUG" ]; then
            echo "VLAB_SLUG not set"
            exit 1
          fi
          if [ -z "$MODULE_MAPPING_URL" ]; then
            echo "MODULE_MAPPING_URL not set"
            exit 1
          fi
          if [ -z "$SEARCH_API_ENDPOINT" ]; then
              echo "SEARCH_API_ENDPOINT not set"
              exit 1
          fi
          if [ -z "$SEARCH_API_TOKEN" ]; then
            echo "SEARCH_API_TOKEN not set"
            exit 1
          fi
          if [ -z "ARGO_URL" ]; then
            echo "ARGO_URL not set"
            exit 1
          fi
          if [ -z "ARGO_API_TOKEN" ]; then
            echo "ARGO_API_TOKEN not set"
            exit 1
          fi


      - uses: actions/checkout@v3
      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Add conda to system path
        run: |
          # $CONDA is an environment variable pointing to the root of the miniconda directory
          echo $CONDA/bin >> $GITHUB_PATH
      - name: Install dependencies
        run: |
          conda env update --file environment.yml --name base            

      - name: Lint with flake8
        run: |
          conda install flake8
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test with pytest
        run: |
          python docker/repo_utils/conf_vl_repos.py  --force=True
          conda install pytest
          pip install --upgrade build
          pytest --ignore=docker --ignore=cypress

      - name: start NaaVRE
        run: |
          jupyter lab build && cp -r docker/repo_utils/ /tmp/ && ./docker/init_script.sh && jupyter lab --debug --watch --NotebookApp.token='' --NotebookApp.ip='0.0.0.0' --NotebookApp.allow_origin='*'

      - name: Cypress run
        uses: cypress-io/github-action@v5
          
