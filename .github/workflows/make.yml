name: make
on:
  release:
    types: [published]
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
  schedule:
    - cron: '0 4 5,25 * *'

jobs:
  configure-workflow:
    name: Configure workflow
    runs-on: ubuntu-latest
    outputs:
      should_skip: ${{ steps.skip_check.outputs.should_skip }}
      runner: ${{ steps.choose-runner.outputs.runner }}
    steps:
      - id: skip_check
        name: Configure skip-duplicate-actions
        uses: fkirc/skip-duplicate-actions@v5
        with:
          paths_ignore: '["**/README.md"]'  # FIXME
          do_not_skip: '["workflow_dispatch", "schedule", "release"]'
      - id: choose-runner
        uses: QCDIS/choose-action-runner@v2
        with:
          preferred-runner: naavre
          fallback-runner: ubuntu-latest
          github-token: ${{ secrets.RUNNER_ACCESS_TOKEN }}

  check_secrets_and_variables:
    uses: ./.github/workflows/check_secrets_and_variables.yml
    needs: [configure-workflow]
    with:
      runs-on: ubuntu-latest
      jupyterhub_user: ${{ vars.JUPYTERHUB_USER }}
      vlab_slug: ${{ vars.VLAB_SLUG }}
      cell_github: ${{ vars.CELL_GITHUB }}
      api_endpoint: ${{ vars.API_ENDPOINT }}
      module_mapping_url: ${{ vars.MODULE_MAPPING_URL }}
      search_api_endpoint: ${{ vars.SEARCH_API_ENDPOINT }}
      registry_url: ${{ vars.REGISTRY_URL }}
      argo_url: ${{ vars.ARGO_URL }}
      debug: ${{ vars.DEBUG }}
    secrets:
      argo_api_token: ${{ secrets.ARGO_API_TOKEN }}
      cell_github_token:  ${{ secrets.CELL_GITHUB_TOKEN }}
      naavre_api_token: ${{ secrets.NAAVRE_API_TOKEN }}
      search_api_token: ${{ secrets.SEARCH_API_TOKEN }}

  lint:
    uses: ./.github/workflows/lint.yml
    needs: [configure-workflow]
    if: ${{ needs.configure-workflow.outputs.should_skip != 'true' }}
    with:
      runs-on: ubuntu-latest

  call-collect-tests:
    uses: ./.github/workflows/collect-tests.yml
    needs: [configure-workflow]

  split-tests:
    needs: [configure-workflow, call-collect-tests]
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.split-output.outputs.test_list }}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Download pytest output artifact
        uses: actions/download-artifact@v3
        with:
          name: test_list
          path: ./

      - name: Generate matrix from pytest_output
        id: split-output
        run: |
          cat test_list.json
          MATRIX=$(jq -c . test_list.json)
          echo $MATRIX
          echo "test_list=$MATRIX" >> $GITHUB_OUTPUT

  print-matrix:
    runs-on: ubuntu-latest
    needs: [split-tests]
    steps:
      - name: Print test_list
        run: |
          echo "${{ steps.split-tests.outputs.test_list }}"


  call-pytest:
    uses: ./.github/workflows/run-tests.yml
    needs: [split-tests]
    if: ${{ needs.configure-workflow.outputs.should_skip != 'true' }}
    strategy:
      matrix:
        test: ${{ needs.split-tests.outputs.matrix }}
    with:
      runs-on: ${{ needs.configure-workflow.outputs.runner }}
      jupyterhub_user: ${{ vars.JUPYTERHUB_USER }}
      vlab_slug: ${{ vars.VLAB_SLUG }}
      cell_github: ${{ vars.CELL_GITHUB }}
      api_endpoint: ${{ vars.API_ENDPOINT }}
      module_mapping_url: ${{ vars.MODULE_MAPPING_URL }}
      search_api_endpoint: ${{ vars.SEARCH_API_ENDPOINT }}
      registry_url: ${{ vars.REGISTRY_URL }}
      debug: ${{ vars.DEBUG }}
#       group: ${{ matrix.group }}
    secrets:
      cell_github_token:  ${{ secrets.CELL_GITHUB_TOKEN }}
      naavre_api_token: ${{ secrets.NAAVRE_API_TOKEN }}
      search_api_token: ${{ secrets.SEARCH_API_TOKEN }}
#
#   make-release:
#     uses: ./.github/workflows/make-release.yml
#     needs: [configure-workflow]
#     if: ${{ needs.configure-workflow.outputs.should_skip != 'true' }}
#     with:
#       runs-on: ubuntu-latest
#       jupyterhub_user: ${{ vars.JUPYTERHUB_USER }}
#       vlab_slug: ${{ vars.VLAB_SLUG }}
#       cell_github: ${{ vars.CELL_GITHUB }}
#       api_endpoint: ${{ vars.API_ENDPOINT }}
#       module_mapping_url: ${{ vars.MODULE_MAPPING_URL }}
#       search_api_endpoint: ${{ vars.SEARCH_API_ENDPOINT }}
#       registry_url: ${{ vars.REGISTRY_URL }}
#       debug: ${{ vars.DEBUG }}
#     secrets:
#       cell_github_token:  ${{ secrets.CELL_GITHUB_TOKEN }}
#       naavre_api_token: ${{ secrets.NAAVRE_API_TOKEN }}
#       search_api_token: ${{ secrets.SEARCH_API_TOKEN }}
#
#   call-build-container-vanilla:
#     needs: [make-release,call-pytest]
#     uses: ./.github/workflows/build-container.yml
#     with:
#       wheel_artifact_name: jupyterlab_vre
#       docker_folder: vanilla
#       tag: n-a-a-vre
#       push: ${{ github.event_name == 'release' }}
#     secrets:
#       docker_username: ${{ secrets.DOCKERHUB_USERNAME }}
#       docker_password: ${{ secrets.DOCKERHUB_PASSWORD }}
