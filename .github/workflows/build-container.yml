name: Build container

on:
  workflow_call:
    inputs:
      runs-on:
        default: ubuntu-latest
        type: string
      docker_folder:
        required: true
        type: string
      tag:
        required: true
        type: string
      wheel_artifact_name:
        required: true
        type: string
      push:
        required: true
        type: boolean
    secrets:
      docker_username:
        required: true
      docker_password:
        required: true
env:
  DOCKER_FOLDER:  ${{ inputs.docker_folder }}
  TAG:  ${{ inputs.tag }}
  DOCKERHUB_IMAGE_ID: "qcdis/"

jobs:
  build:
    runs-on: ${{ inputs.runs-on }}
    steps:
    - uses: actions/checkout@v4

    - name: Download artifact
      uses: actions/download-artifact@v3
      with:
        name: ${{ inputs.wheel_artifact_name }}
        path: docker/${{ inputs.docker_folder }}
    - uses: mikefarah/yq@v4.44.1

    - name: add whl and start files
      run: |
          cp docker/init_script.sh docker/$DOCKER_FOLDER/
          cp docker/start-jupyter.sh docker/$DOCKER_FOLDER/
          cp docker/start-jupyter.sh docker/$DOCKER_FOLDER/
          cp docker/start-jupyter-venv.sh docker/$DOCKER_FOLDER/
          cp -r docker/repo_utils docker/$DOCKER_FOLDER/repo_utils
          cp environment.yml docker/$DOCKER_FOLDER/
          mv docker/$DOCKER_FOLDER/environment.yml docker/$DOCKER_FOLDER/naa-vre-environment.yaml
          if test -f "docker/$DOCKER_FOLDER/environment.yaml"; then yq 'del(.channels[] | select(. == "defaults"))' docker/$DOCKER_FOLDER/environment.yaml -i; fi
          yq 'del(.channels[] | select(. == "defaults"))' docker/$DOCKER_FOLDER/naa-vre-environment.yaml -i


    - name: Login to github Registry
      if: ${{ inputs.push }}
      uses: docker/login-action@v3
      with:
        registry: "https://index.docker.io/v1/"
        username: ${{ secrets.docker_username }}
        password: ${{ secrets.docker_password }}

    - id: get_version
      uses: battila7/get-version-action@v2
    - run: echo ${{ steps.get_version.outputs.version }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Check and truncate version
      id: check_and_truncate
      run: |
        version=${{ steps.get_version.outputs.version }}
        if [ ${#version} -gt 10 ]; then
          echo "::set-output name=version::${version:0:10}"
        else
          echo "::set-output name=version::$version"
        fi

    - name: Build docker
      uses: docker/build-push-action@v5
      with:
        context: docker/${{ inputs.docker_folder }}
        push: ${{ inputs.push }}
        tags: qcdis/${{ inputs.tag }}:${{ steps.check_and_truncate.outputs.version }},qcdis/${{ inputs.tag }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=min