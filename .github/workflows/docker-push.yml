name: Docker push
on:
  push:
  release:
    types: [created]

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

  # Run tests for any PRs.
  pull_request:

env:
  IMAGE_NAME:  n-a-a-vre
  GITLAB: registry.gitlab.com/qcd1/registry
  GITHUB: qcdis

jobs:

  push-gitlab:
    # Ensure test job passes before pushing image.
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Setup npm
        uses: actions/setup-node@v1
        with:
          node-version: 17
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          if [ -f test-requirements.txt ]; then pip install -r test-requirements.txt; fi
          npm install @mrblenny/react-flow-chart@"^0.0.14" 
          npm install @types/node@"^12.13.0 || ^14.15.0 || >=16" --save-dev
          npm install lerna
          npm install
      - name: build
        run: |
            npx lerna run build --scope @jupyter_vre/core
            npx lerna run build
            make release
      - name: Build docker
        run: |
            cp dist/jupyterlab_vre-0.1.0-py3-none-any.whl docker/
          
      - name: Build image
        run: cd docker && docker build . --file Dockerfile --tag $IMAGE_NAME
      
      - name: Login to Gitlab Container Registry
        uses: docker/login-action@v1
        with:
          registry: registry.gitlab.com
          username: ${{ secrets.GITLAB_REGISTRY_USERNAME }}
          password: ${{ secrets.GITLAB_REGISTRY_PASSWORD }}
          
      - name: Push image to Gitlab Container Registry
        run: |
          IMAGE_ID=$GITLAB/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:latest
          docker push $IMAGE_ID:latest
  push-dockerhub:
    # Ensure test job passes before pushing image.
    runs-on: ubuntu-latest
    if: github.event_name == 'push'

    steps:      
      - name: Login to docker hub Container Registry
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Push image to docker hub Container Registry
        run: |
          IMAGE_ID=$GITHUB/$IMAGE_NAME
          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          [ "$VERSION" == "master" ] && VERSION=latest
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION
          docker tag $IMAGE_NAME $IMAGE_ID:latest
          docker push $IMAGE_ID:latest
