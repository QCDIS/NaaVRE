name: Check secrets and variables

on:
  workflow_call:
    inputs:
      runs-on:
        default: ubuntu-latest
        type: string
      api_endpoint:
        required: true
        type: string
      argo_url:
        required: true
        type: string
      cell_github:
        required: true
        type: string
      debug:
        required: true
        type: string
      jupyterhub_user:
        required: true
        type: string
      module_mapping_url:
        required: true
        type: string
      registry_url:
        required: true
        type: string
      search_api_endpoint:
        required: true
        type: string
      vlab_slug:
        required: true
        type: string
    secrets:
      argo_api_token:
        required: true
      cell_github_token:
        required: true
      naavre_api_token:
        required: true
      search_api_token:
        required: true

env:
  CELL_GITHUB: ${{ inputs.cell_github }}
  CELL_GITHUB_TOKEN: ${{ secrets.cell_github_token }}
  REGISTRY_URL: ${{ inputs.registry_url }}
  NAAVRE_API_TOKEN: ${{ secrets.naavre_api_token }}
  JUPYTERHUB_USER: ${{ inputs.jupyterhub_user }}
  API_ENDPOINT: ${{ inputs.api_endpoint }}
  VLAB_SLUG: ${{ inputs.vlab_slug }}
  MODULE_MAPPING_URL: ${{ inputs.module_mapping_url }}
  SEARCH_API_ENDPOINT: ${{ inputs.search_api_endpoint }}
  SEARCH_API_TOKEN: ${{ secrets.search_api_token }}
  ARGO_URL: ${{ inputs.ARGO_URL }}
  ARGO_API_TOKEN: ${{ secrets.ARGO_API_TOKEN }}
  ASYNC_TEST_TIMEOUT: 30
  DEBUG: ${{ inputs.debug }}


jobs:
  build-linux:
    runs-on: ${{ inputs.runs-on }}
    strategy:
      fail-fast: true
    steps:
      - name: Check secrets and variables
        run: |
          vars_not_set=0
          concatenated_error_message=""
          if [ -z "$CELL_GITHUB" ]; then
            echo "CELL_GITHUB not set"
            concatenated_error_message="$concatenated_error_message CELL_GITHUB not set"
            vars_not_set=1
          fi
          if [ -z "$CELL_GITHUB_TOKEN" ]; then
            echo "CELL_GITHUB_TOKEN not set"
            concatenated_error_message="$concatenated_error_message CELL_GITHUB_TOKEN not set"
            vars_not_set=1
          fi
          if [ -z "$NAAVRE_API_TOKEN" ]; then
            echo "NAAVRE_API_TOKEN not set"
            concatenated_error_message="$concatenated_error_message NAAVRE_API_TOKEN not set"
            vars_not_set=1
          fi
          if [ -z "$JUPYTERHUB_USER" ]; then
            echo "JUPYTERHUB_USER not set"
            concatenated_error_message="$concatenated_error_message JUPYTERHUB_USER not set"
            vars_not_set=1
          fi
          if [ -z "$API_ENDPOINT" ]; then
            echo "API_ENDPOINT not set"
            concatenated_error_message="$concatenated_error_message API_ENDPOINT not set"
            vars_not_set=1
          fi
          if [ -z "$VLAB_SLUG" ]; then
            echo "VLAB_SLUG not set"
            concatenated_error_message="$concatenated_error_message VLAB_SLUG not set"
            vars_not_set=1
          fi
          if [ -z "$MODULE_MAPPING_URL" ]; then
            echo "MODULE_MAPPING_URL not set"
            concatenated_error_message="$concatenated_error_message MODULE_MAPPING_URL not set"
            vars_not_set=1
          fi
          if [ -z "$SEARCH_API_ENDPOINT" ]; then
            echo "SEARCH_API_ENDPOINT not set"
            concatenated_error_message="$concatenated_error_message SEARCH_API_ENDPOINT not set"
            vars_not_set=1
          fi
          if [ -z "$SEARCH_API_TOKEN" ]; then
            echo "SEARCH_API_TOKEN not set"
            concatenated_error_message="$concatenated_error_message SEARCH_API_TOKEN not set"
            vars_not_set=1
          fi
          if [ -z "ARGO_URL" ]; then
            echo "ARGO_URL not set"
            concatenated_error_message="$concatenated_error_message ARGO_URL not set"
            vars_not_set=1
          fi
          if [ -z "ARGO_API_TOKEN" ]; then
            echo "ARGO_API_TOKEN not set"
            concatenated_error_message="$concatenated_error_message ARGO_API_TOKEN not set"
            vars_not_set=1
          fi
          if [ -z "$DEBUG" ]; then
            echo "DEBUG not set"
            concatenated_error_message="$concatenated_error_message DEBUG not set"
            vars_not_set=1
          fi

          if [ $vars_not_set -eq 1 ]; then
            echo "Exiting with error"
            echo $concatenated_error_message
            exit 1
          fi