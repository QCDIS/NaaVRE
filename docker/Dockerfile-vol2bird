FROM jupyterhub/k8s-singleuser-sample:1.1.3-n248.h20c9028e

USER root

#===== Add pdalpy dependencies ======
RUN apt-get update --allow-releaseinfo-change && apt-get upgrade -y && apt-get -y install gcc g++ s3fs curl git
#====================================

#============== install vol2bird==============
# installs using apt-get:
# * libconfuse: library for parsing options
# * libhdf5: HDF5, Hierarchichal Data Format library
# * libgsl: the GNU Scientific Library
# * git, for fetching repositories from Github
# * git-lfs, for fetching large file repositories from Github
# * wget for downloading files, specifically libtorch
# * unzip
# * compiler (gcc, g++, make, cmake, etc)
# * zlib (gzip archiving library)
# * libbz2 (bzip2 archiving library)
# * python
# * numpy
# * proj4 library
# * flexold, otherwise configure script of RSL library does not function properly
RUN apt-get update && apt-get install --no-install-recommends -y libconfuse-dev \
    libhdf5-dev gcc g++ wget unzip make cmake zlib1g-dev python-dev python-numpy libproj-dev flex-old file \
    && apt-get install -y git git-lfs && apt-get install -y libgsl-dev && apt-get install -y libbz2-dev bison byacc


# get a copy of hlhdf:
# configure and build hlhdf
# strange Docker conflict when attempting to install in /opt/radar/hlhdf, therefore in root radar instead
RUN pip3 install numpy minio==7.0.3 h5py pandas
RUN git clone https://github.com/adokter/hlhdf.git \
    && cd hlhdf && ./configure --prefix=/opt/radar --with-hdf5=/usr/include/hdf5/serial,/usr/lib/x86_64-linux-gnu/hdf5/serial \
    && make && make install && cd .. && rm -rf hlhdf

# get a copy of rave:
# cd into rave source directory and configure
# using a clone from git://git.baltrad.eu/rave.git \
RUN git clone https://github.com/adokter/rave.git \
    && cd rave && ./configure --prefix=/opt/radar/rave --with-hlhdf=/opt/radar \
    && make && make install && cd .. && rm -rf rave

# get a copy of iris2odim:
RUN git clone https://github.com/adokter/iris2odim.git \
    && cd iris2odim && export RAVEROOT=/opt/radar \
    && make && make install && cd .. && rm -rf iris2odim

# get a copy of RSL:
RUN git clone https://github.com/adokter/rsl.git && cd rsl \
    && ./configure --prefix=/opt/radar/rsl \
    && make AUTOCONF=: AUTOHEADER=: AUTOMAKE=: ACLOCAL=: \
    && make install AUTOCONF=: AUTOHEADER=: AUTOMAKE=: ACLOCAL=: \
    && cd .. && rm -rf rsl

# get a copy of vol2bird
# configure vol2bird
RUN git clone https://github.com/adokter/vol2bird.git \
    && cd vol2bird && ./configure --prefix=/opt/radar/vol2bird --with-rave=/opt/radar/rave --with-rsl=/opt/radar/rsl \
    --with-gsl=/usr/include/gsl,/usr/lib/x86_64-linux-gnu \
    && make && make install && cd .. && rm -rf vol2bird

# clean up
RUN apt-get remove -y git git-lfs gcc g++ wget unzip make cmake python-numpy -y python-dev flex-old \
    && apt-get clean && apt -y autoremove && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*

# prepare mount points
RUN mkdir data

# set the paths to installed libraries and executables
ENV LD_LIBRARY_PATH=${LD_LIBRARY_PATH}:/opt/radar/lib:/opt/radar/rave/lib:/opt/radar/rsl/lib:/opt/radar/vol2bird/lib:/usr/lib/x86_64-linux-gnu
ENV PATH=${PATH}:/opt/radar/vol2bird/bin:/opt/radar/rsl/bin

#===============================

ADD start-jupyter.sh /usr/local/bin/start-jupyter.sh
ADD jupyterlab_vre-0.1.0-py3-none-any.whl /home/jovyan/jupyterlab_vre-0.1.0-py3-none-any.whl
COPY ./repo_utils/ /tmp/repo_utils

RUN chmod ugo+x /usr/local/bin/start-jupyter.sh

RUN apt-get update && apt-get install -y git

USER $NB_USER

RUN conda remove --force -y terminado && \
    python -m pip install --upgrade pip

RUN python3 -m pip install --quiet --no-cache-dir /home/jovyan/jupyterlab_vre-0.1.0-py3-none-any.whl && \
    jupyter serverextension enable --py jupyterlab_vre --user

RUN pip install jupyterlab-github jupyter-videochat nbgitpuller jupyterlab-lsp python-lsp-server[all] pre-commit ggshield && \
    jupyter serverextension enable --py jupyter_videochat --user && \
    jupyter serverextension enable --py jupyterlab_github --user

WORKDIR $HOME
RUN jupyter lab build --debug;
RUN conda clean -a -y
CMD ["/usr/local/bin/start-jupyter.sh"]